%!PS-Adobe-2.0 EPSF-2.0
%%Title: linearisierung_FSR_korr/05.tex
%%Creator: gnuplot 4.4 patchlevel 2
%%CreationDate: Sat Jan 21 16:14:20 2012
%%DocumentFonts: 
%%BoundingBox: 50 50 248 183
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext true def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (linearisierung_FSR_korr/05.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 2)
  /Author (fischbac)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Jan 21 16:14:20 2012)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 248 50 lineto 248 183 lineto 50 183 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
LCb setrgbcolor
0.100 UL
LT0
LC0 setrgbcolor
0.96 0.96 0.96 C 740 540 M
2867 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
740 540 M
63 0 V
2804 0 R
-63 0 V
stroke
LTb
740 593 M
31 0 V
2836 0 R
-31 0 V
740 645 M
31 0 V
2836 0 R
-31 0 V
740 698 M
31 0 V
2836 0 R
-31 0 V
740 750 M
31 0 V
2836 0 R
-31 0 V
stroke
0.100 UL
LT0
LC0 setrgbcolor
0.96 0.96 0.96 C 740 803 M
2867 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
740 803 M
63 0 V
2804 0 R
-63 0 V
stroke
LTb
740 855 M
31 0 V
2836 0 R
-31 0 V
740 908 M
31 0 V
2836 0 R
-31 0 V
740 961 M
31 0 V
2836 0 R
-31 0 V
740 1013 M
31 0 V
2836 0 R
-31 0 V
stroke
0.100 UL
LT0
LC0 setrgbcolor
0.96 0.96 0.96 C 740 1066 M
2867 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
740 1066 M
63 0 V
2804 0 R
-63 0 V
stroke
LTb
740 1118 M
31 0 V
2836 0 R
-31 0 V
740 1171 M
31 0 V
2836 0 R
-31 0 V
740 1223 M
31 0 V
2836 0 R
-31 0 V
740 1276 M
31 0 V
2836 0 R
-31 0 V
stroke
0.100 UL
LT0
LC0 setrgbcolor
0.96 0.96 0.96 C 740 1329 M
2867 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
740 1329 M
63 0 V
2804 0 R
-63 0 V
stroke
LTb
740 1381 M
31 0 V
2836 0 R
-31 0 V
740 1434 M
31 0 V
2836 0 R
-31 0 V
740 1486 M
31 0 V
2836 0 R
-31 0 V
740 1539 M
31 0 V
2836 0 R
-31 0 V
stroke
0.100 UL
LT0
LC0 setrgbcolor
0.96 0.96 0.96 C 740 1592 M
2867 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
740 1592 M
63 0 V
2804 0 R
-63 0 V
stroke
LTb
740 1644 M
31 0 V
2836 0 R
-31 0 V
740 1697 M
31 0 V
2836 0 R
-31 0 V
740 1749 M
31 0 V
2836 0 R
-31 0 V
740 1802 M
31 0 V
2836 0 R
-31 0 V
stroke
0.100 UL
LT0
LC0 setrgbcolor
0.96 0.96 0.96 C 740 1854 M
2867 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
740 1854 M
63 0 V
2804 0 R
-63 0 V
stroke
LTb
740 1907 M
31 0 V
2836 0 R
-31 0 V
740 1960 M
31 0 V
2836 0 R
-31 0 V
740 2012 M
31 0 V
2836 0 R
-31 0 V
740 2065 M
31 0 V
2836 0 R
-31 0 V
stroke
0.100 UL
LT0
LC0 setrgbcolor
0.96 0.96 0.96 C 740 2117 M
2867 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
740 2117 M
63 0 V
2804 0 R
-63 0 V
stroke
LTb
740 2170 M
31 0 V
2836 0 R
-31 0 V
740 2222 M
31 0 V
2836 0 R
-31 0 V
740 2275 M
31 0 V
2836 0 R
-31 0 V
740 2328 M
31 0 V
2836 0 R
-31 0 V
stroke
0.100 UL
LT0
LC0 setrgbcolor
0.96 0.96 0.96 C 740 2380 M
2867 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
740 2380 M
63 0 V
2804 0 R
-63 0 V
stroke
LTb
740 2433 M
31 0 V
2836 0 R
-31 0 V
740 2485 M
31 0 V
2836 0 R
-31 0 V
740 2538 M
31 0 V
2836 0 R
-31 0 V
740 2590 M
31 0 V
2836 0 R
-31 0 V
stroke
0.100 UL
LT0
LC0 setrgbcolor
0.96 0.96 0.96 C 740 2643 M
2867 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
740 2643 M
63 0 V
2804 0 R
-63 0 V
stroke
LTb
740 540 M
0 63 V
0 2040 R
0 -63 V
797 540 M
0 31 V
0 2072 R
0 -31 V
855 540 M
0 31 V
0 2072 R
0 -31 V
912 540 M
0 31 V
0 2072 R
0 -31 V
969 540 M
0 31 V
0 2072 R
0 -31 V
1027 540 M
0 63 V
0 2040 R
0 -63 V
1084 540 M
0 31 V
0 2072 R
0 -31 V
1141 540 M
0 31 V
0 2072 R
0 -31 V
1199 540 M
0 31 V
0 2072 R
0 -31 V
1256 540 M
0 31 V
0 2072 R
0 -31 V
1313 540 M
0 63 V
0 2040 R
0 -63 V
1371 540 M
0 31 V
0 2072 R
0 -31 V
1428 540 M
0 31 V
0 2072 R
0 -31 V
1485 540 M
0 31 V
0 2072 R
0 -31 V
1543 540 M
0 31 V
0 2072 R
0 -31 V
1600 540 M
0 63 V
0 2040 R
0 -63 V
1657 540 M
0 31 V
0 2072 R
0 -31 V
1715 540 M
0 31 V
0 2072 R
0 -31 V
1772 540 M
0 31 V
0 2072 R
0 -31 V
1829 540 M
0 31 V
0 2072 R
0 -31 V
1887 540 M
0 63 V
0 2040 R
0 -63 V
1944 540 M
0 31 V
0 2072 R
0 -31 V
2001 540 M
0 31 V
0 2072 R
0 -31 V
2059 540 M
0 31 V
0 2072 R
0 -31 V
2116 540 M
0 31 V
0 2072 R
0 -31 V
2173 540 M
0 63 V
0 2040 R
0 -63 V
2231 540 M
0 31 V
stroke 2231 571 M
0 2072 R
0 -31 V
2288 540 M
0 31 V
0 2072 R
0 -31 V
2346 540 M
0 31 V
0 2072 R
0 -31 V
2403 540 M
0 31 V
0 2072 R
0 -31 V
2460 540 M
0 63 V
0 2040 R
0 -63 V
2518 540 M
0 31 V
0 2072 R
0 -31 V
2575 540 M
0 31 V
0 2072 R
0 -31 V
2632 540 M
0 31 V
0 2072 R
0 -31 V
2690 540 M
0 31 V
0 2072 R
0 -31 V
2747 540 M
0 63 V
0 2040 R
0 -63 V
2804 540 M
0 31 V
0 2072 R
0 -31 V
2862 540 M
0 31 V
0 2072 R
0 -31 V
2919 540 M
0 31 V
0 2072 R
0 -31 V
2976 540 M
0 31 V
0 2072 R
0 -31 V
3034 540 M
0 63 V
0 2040 R
0 -63 V
3091 540 M
0 31 V
0 2072 R
0 -31 V
3148 540 M
0 31 V
0 2072 R
0 -31 V
3206 540 M
0 31 V
0 2072 R
0 -31 V
3263 540 M
0 31 V
0 2072 R
0 -31 V
3320 540 M
0 63 V
0 2040 R
0 -63 V
3378 540 M
0 31 V
0 2072 R
0 -31 V
3435 540 M
0 31 V
0 2072 R
0 -31 V
3492 540 M
0 31 V
0 2072 R
0 -31 V
3550 540 M
0 31 V
0 2072 R
0 -31 V
3607 540 M
0 63 V
0 2040 R
0 -63 V
stroke
740 2643 N
740 540 L
2867 0 V
0 2103 V
-2867 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LC0 setrgbcolor
LC3 setrgbcolor
1002 1329 Pls
1086 2230 Pls
1172 996 Pls
1257 1774 Pls
1342 1403 Pls
1428 952 Pls
1514 1176 Pls
1599 1572 Pls
1685 1109 Pls
1770 1680 Pls
1855 1318 Pls
1940 1530 Pls
2026 1239 Pls
2112 1181 Pls
2197 1205 Pls
2282 1528 Pls
2368 987 Pls
2455 845 Pls
2539 2145 Pls
2625 1103 Pls
2711 801 Pls
2797 1331 Pls
2881 1849 Pls
2967 1187 Pls
3052 1502 Pls
3137 1286 Pls
3223 1151 Pls
3309 1349 Pls
3395 900 Pls
1.000 UL
LT0
LC0 setrgbcolor
LC1 setrgbcolor
1002 1329 M
84 901 V
86 -332 V
85 445 V
85 74 V
86 -376 V
86 -153 V
85 243 V
86 -219 V
85 351 V
85 -10 V
85 201 V
86 -90 V
86 -147 V
85 -124 V
85 199 V
86 -341 V
87 -484 V
84 816 V
86 -225 V
86 -528 V
86 3 V
84 521 V
86 -142 V
85 174 V
85 -43 V
86 -177 V
86 20 V
86 -428 V
stroke
LTb
LCb setrgbcolor
740 2643 N
740 540 L
2867 0 V
0 2103 V
-2867 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
